{"version":3,"file":"webpack-plugin.js","sourceRoot":"","sources":["../../webpack/core/webpack-plugin.ts"],"names":[],"mappings":";;AACA,qCAA2C;AAC3C,mCAAmC;AACnC,MAAM,wBAAwB,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC;AACvE,MAAM,cAAc,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC;AAC1D,MAAM,WAAW,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AACpD,yDAAyD;AACzD,6BAA6B;AAC7B,MAAa,aAAc,SAAQ,gBAAM;IAIrC;QACI,KAAK,EAAE,CAAC;QAJZ,WAAM,GAAW,CAAC,CAAC;QACnB,YAAO,GAAwB,IAAI,GAAG,EAAE,CAAC;IAIzC,CAAC;IAED,GAAG;QACC,MAAM,OAAO,GAAa,EAAE,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;QAC1C,OAAO,OAAO,CAAC;IACnB,CAAC;IAED,SAAS,CAAC,IAAY,EAAE,MAAc;QAClC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACnC,CAAC;IAED,iBAAiB,CAAC,OAMT;QACL,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,2BAA2B;IAE3B,CAAC;IAED;;OAEG;IACH,sBAAsB;QAClB,MAAM,YAAY,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;QACtD,MAAM,oBAAoB,GAAG,IAAI,YAAY,EAAE,CAAC;QAChD,IAAI,CAAC,SAAS,CAAC,uBAAuB,EAAE,oBAAoB,CAAC,CAAC;IAClE,CAAC;IAED;;OAEG;IACH,oBAAoB,CAAC,KAAkC;QACnD,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACb,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,MAAM,yBAAyB,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;YAC9D,IAAI,CAAC,SAAS,CAAC,uBAAuB,IAAI,CAAC,MAAM,EAAE,EAAE,yBAAyB,CAAC,CAAA;QACnF,CAAC,CAAC,CAAA;IACN,CAAC;IAED;;OAEG;IACH,wBAAwB;QACpB,MAAM,oBAAoB,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC,oBAAoB,CAAC;QACrF,MAAM,4BAA4B,GAAG,IAAI,oBAAoB,EAAE,CAAC;QAChE,IAAI,CAAC,SAAS,CAAC,yBAAyB,EAAE,4BAA4B,CAAC,CAAA;IAC3E,CAAC;IAED;;OAEG;IAGH,YAAY;IACZ;;;;;;;;;;MAUE;IACF,YAAY,CAAC,IAAU;QACnB,MAAM,SAAS,GAAG,IAAI,OAAO,CAAC,SAAS,CAAC;YACpC,IAAI,EAAE,aAAa;YACnB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,eAAe,CAAC;YACtC,OAAO,EAAE,GAAG;SACf,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IAC5C,CAAC;CACJ;AAtFD,sCAsFC","sourcesContent":["import { Path } from '@angular-devkit/core';\nimport { Plugin, Compiler } from 'webpack';\nimport * as webpack from 'webpack';\nconst CircularDependencyPlugin = require('circular-dependency-plugin');\nconst UglifyJSPlugin = require('uglifyjs-webpack-plugin');\nconst StatsPlugin = require('stats-webpack-plugin');\nimport * as HtmlWebpackPlugin from 'html-webpack-plugin';\nimport * as path from 'path';\nexport class WebpackPlugin extends Plugin {\n    pageId: number = 0;\n    plugins: Map<string, Plugin> = new Map();\n\n    constructor() {\n        super();\n    }\n\n    get(): Plugin[] {\n        const plugins: Plugin[] = [];\n        this.plugins.forEach(p => plugins.push(p))\n        return plugins;\n    }\n\n    setPlugin(name: string, plugin: Plugin) {\n        this.plugins.set(name, plugin);\n    }\n\n    setProgressPlugin(options: (\n        percentage: number,\n        msg: string,\n        moduleProgress?: string,\n        activeModules?: string,\n        moduleName?: string\n    ) => void) {\n        this.setPlugin('progress', new webpack.ProgressPlugin(options));\n    }\n\n    setCircularDependencyPlugin() {\n\n    }\n\n    /**\n     * npm i assets-webpack-plugin\n     */\n    setAssetsWebpackPlugin() {\n        const AssetsPlugin = require('assets-webpack-plugin');\n        const assetsPluginInstance = new AssetsPlugin();\n        this.setPlugin('assets-webpack-plugin', assetsPluginInstance);\n    }\n\n    /**\n     * npm i html-webpack-plugin\n     */\n    setHtmlWebpackPlugin(pages: HtmlWebpackPlugin.Options[]) {\n        pages.map(page => {\n            this.pageId++;\n            const htmlWebpackPluginInstance = new HtmlWebpackPlugin(page);\n            this.setPlugin(`html-webpack-plugin-${this.pageId}`, htmlWebpackPluginInstance)\n        })\n    }\n\n    /**\n     * npm i webpack-bundle-analyzer\n     */\n    setWebpackBundleAnalyzer() {\n        const BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin;\n        const bundleAnalyzerPluginInstance = new BundleAnalyzerPlugin();\n        this.setPlugin('webpack-bundle-analyzer', bundleAnalyzerPluginInstance)\n    }\n\n    /**\n     * npm i webpack-parallel-uglify-plugin\n     */\n\n\n    // DllPlugin\n    /**\n     *  context: path.resolve(root),\n     *  entry: {\n     *    vendor: Object.keys(pkg.dependencies)\n     *  },\n     *  output{\n     *     path: resolve('dist'),\n     *    filename: '[name].dll.js',\n     *    library: '_dll_[name]' // 全局变量名，其他模块会从此变量上获取里面模块\n     * }\n    */\n    setDllPlugin(root: Path) {\n        const dllPlugin = new webpack.DllPlugin({\n            name: '_dll_[name]',\n            path: path.join(root, 'manifest.json'),\n            context: '.'\n        });\n        this.setPlugin('dll-plugin', dllPlugin);\n    }\n}\n"]}